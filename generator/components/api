{
    "type": "class",
    "name": "{{name}}",
    "imports": [
        "from injector import inject",
        {% if repos != [] %} "from {{application}}.store.repos import {{", ".join(repos)}}", {% endif %}
        {% if services != [] %} "from {{application}}.domain.service import {{", ".join(services)}}", {% endif %}
        {% if ex_services != [] %} "from {{application}}.domain.ex_service import {{", ".join(ex_services)}}", {% endif %}
        "from {{application}}.utils.flask import APIResponse",
        "from {{application}}.utils.handler import apiclass",
        "from {{application}}.utils.injector import injector"
    ],
    "decorators": [
        "@singleton",
        "@apiclass"
    ],
    {%- if api_meta.get("depends") -%}
    "constructor": {
        "decorators": [
            "@inject"
        ],
        "arguments": [
            {% for dependency in api_meta["depends"] %}
            {
                "name": "{{snakecase(dependency['name'])}}",
                "type": "{{dependency['name']}}",
            },
            {% endfor %}
        ],
        "contents": [
            {%- for dependency in api_meta["depends"] -%}"self._{{snakecase(dependency['name'])}}: {{dependency['name']}} = {{snakecase(dependency['name'])}}", {% endfor %}
        ]
    },{%- endif -%}
    "methods": [
        {%- for method in api_data -%}{
            "name": "{{method["method_name"]}}",
            {% if method.get("arguments") -%}"arguments": [
                {%- for argument in method["arguments"] -%}{
                    "name": "{{argument["name"]}}",
                    {% if argument.get("type") %} "type": "{{argument["type"]}}", {% endif -%}
                }, {% endfor -%}
            ], {% endif -%}
            "return_type": {%if method["response_type"] %} "Union[{{",".join(method["response_type"]+["APIResponse"])}}]" {%else%} "APIResponse" {% endif %} ,
            "contents": [
                "return APIResponse({})"
            ]
        }, {% endfor -%}
    ]
}