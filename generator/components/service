{
    "type": "class",
    "name": "{{name}}",
    "imports": [
        "from injector import singleton, inject",
        {% if repos != [] %} "from {{application}}.store.repos import {{", ".join(repos)}}", {% endif %}
        {% if services != [] %} "from {{application}}.domain.service import {{", ".join(services)}}", {% endif %}
        {% if ex_services != [] %} "from {{application}}.domain.ex_service import {{", ".join(ex_services)}}", {% endif %}
    ],
    "decorators": [
        "@singleton",
    ],
    {%- if service_data.get("depends") -%}
    "constructor": {
        "decorators": [
            "@inject"
        ],
        "arguments": [
            {%- for dependency in service_data["depends"] %}
            {
                "name": "{{snakecase(dependency['name'])}}",
                "type": "{{dependency['name']}}",
            },
            {% endfor -%}
        ],
        "contents": [
            {%- for dependency in service_data["depends"] -%}"self._{{snakecase(dependency['name'])}}: {{dependency['name']}} = {{snakecase(dependency['name'])}}", {% endfor -%}
        ]
    },{%- endif -%}
    "methods": [
        {%- for method in service_data.get("interface", []) -%}{
            "name": "{{method}}",
            {% if service_data["interface"][method].get("arguments") -%}"arguments": [
                {%- for argument in service_data["interface"][method]["arguments"] -%}{
                    "name": "{{argument["name"]}}",
                    "type": "{{argument["type"]}}",
                }, {% endfor -%}
            ], {% endif -%}
            {%- if service_data["interface"][method].get("returns") -%}"return_type": "{{service_data["interface"][method]["returns"]}}",{%- endif -%}
            "contents": [
                "pass"
            ]
        }, {% endfor -%}
    ]
}